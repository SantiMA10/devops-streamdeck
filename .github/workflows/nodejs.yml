# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - run: yarn build
      - run: yarn test
        env:
          CI: true
  build:
    runs-on: [macos-latest]
    needs: [tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - run: yarn build
      - name: Generate .streamDeckPlugin
        run: ./tools/mac/DistributionTool -b -i ./dist/dev.santiagomartin.devops.sdPlugin -o ./release/
      - name: Upload .streamDeckPlugin artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          # Artifact name
          name: dev.santiagomartin.devops.streamDeckPlugin
          # Directory containing files to upload
          path: ./release/
